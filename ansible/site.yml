---
- hosts: localhost
  connection: local

  vars:
    vault_do_token: !vault |
          $ANSIBLE_VAULT;redacted

  tasks:
    - name: ensure ssh key exists
      user:
        name: "{{ ansible_user_id }}"
        generate_ssh_key: yes
        ssh_key_file: .ssh/gophish_dev
        ssh_key_bits: 4096

    - name: ensure ssh key is uploaded to DigitalOcean
      digital_ocean:
        state: present
        command: ssh
        name: gophish-dev
        ssh_pub_key: "{{ lookup('file', '~/.ssh/gophish_dev.pub') }}"
        api_token: "{{ vault_do_token }}"
      register: gophish_ssh_key
    
    - name: create the droplet used to build releases
      digital_ocean:
        state: present
        command: droplet
        name: gophish-release
        api_token: "{{ vault_do_token }}"
        size_id: s-1vcpu-1gb
        region_id: nyc1
        image_id: debian-9-x64
        wait_timeout: 500
        ssh_key_ids: "{{ gophish_ssh_key.ssh_key.id }}"
        unique_name: yes
      register: gophish_droplet
    
    - debug:
        msg: "ID is {{ gophish_droplet.droplet.id }}"

    - debug:
        msg: "IP is {{ gophish_droplet.droplet.ip_address }}"
    
    - name: add the droplet to our inventory
      add_host:
        name: "{{ gophish_droplet.droplet.ip_address }}"
        groups: droplets
        ansible_ssh_private_key_file: ~/.ssh/gophish_dev

    - name: wait for port 22 to become available.
      local_action: wait_for host="{{ gophish_droplet.droplet.ip_address }}" port=22 delay=5 timeout=600

- hosts: droplets
  remote_user: root
  roles:
    - release

  environment:
    PATH: "{{ ansible_env.path }}:/usr/local/go/bin"

- hosts: localhost
  connection: local

  vars:
    vault_do_token: !vault |
          $ANSIBLE_VAULT;redacted

  tasks:
    - name: remove the droplet
      digital_ocean:
        state: absent
        command: droplet
        name: gophish-release
        api_token: "{{ vault_do_token }}"
        wait_timeout: 500